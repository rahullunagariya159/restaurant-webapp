#set( $distance = $util.defaultIfNull($ctx.args.m, 1073741824) )
#set( $limit = $util.defaultIfNull($ctx.args.limit, 35))
#set( $priceLow = $util.defaultIfNull($context.args.priceLow, 0))
#set( $priceHigh = $util.defaultIfNull($context.args.priceHigh, 9999))

{  
  "version": "2017-02-28",
  "operation": "GET",
  "path": "/cardpoint/doc/_search",  
  "params": {    
    "body": {      
    #if( $context.args.nextToken )
    	#set ($myArray = $context.args.nextToken.split("\|"))
    	"search_after": ["$myArray.get(0)", "$myArray.get(1)"], 
    #end       
    "size" : ${limit},
    #if (!$context.args.cuisine && !$context.args.delivery && !$context.args.diets && $context.args.skipLocation )
    "query": {
    	"function_score": {
          "query": {
            "match_all": {}
          },
          "random_score": {}
        }
    },
    #else
    "query": {
        "function_score": {
           "boost": "5",
           "boost_mode": "sum",
            "query": { 
                "bool": {
                    #if($context.args.cuisine)
                    "must": {
                        "match": {
                            "cuisine": "$context.args.cuisine"
                        }
                    },
                    #end
                    "filter": [
                        #if(!$context.args.skipLocation)
                        {            
                            "geo_distance" : {              
                                "distance" : "${distance}m", 
                                "distance_type": "arc",             
                                "location" : $util.toJson($ctx.args.location) 
                            }          
                        },
                        #end
                        #if($context.args.delivery)
                        {
                            "match": {
                                "delivery": "$context.args.delivery"
                            }
                        },
                        #end
                        {
                            "range": {
                                "price": {
                                "gte": "$priceLow",
                                "lte": "$priceHigh"
                                }
                            }
                        },
                        #if($context.args.diets)
                        {
                            "match": {
                                "diets": "$context.args.diets"
                            }
                        }
                        #end
                    ]
                },
            },
            "functions": [
                {
                    "random_score": {},
                },
                #if($context.args.userId)
                {
                    "filter": {
                        "match": {
                            "dislike": "$context.args.userId"
                        }
                    }, 
                    "weight": -0.50
                },
                {
                    "filter": {
                        "match": {
                            "like": "$context.args.userId"
                        }
                    }, 
                    "weight": -0.0001
                },
                #end
            ]
        }
    },
    #end
    "sort": [
        {
            "_score": {
                "order": "desc"    
            }
        },
        { 
            "_geo_distance": {          
                "location": $util.toJson($ctx.args.location),          
                "order": "asc",          
                "unit": "m",          
                "distance_type": "arc"        
            } 
        }
    ]
   }  
}}